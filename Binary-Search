// /* Binary Search - search alg which partitions the array into segments narrowing down its search */
// only works with sorted arrays
// const sortedArray = [0,1,1,1,2,3,3,3,4,6,7,21,31,155,1245];
//
// const printSegment = (array, left, right) => {
//   const segment = [];
//   for (let i = left; i<right; i++) {
//     segment.push(array[i]);
//   }
//   console.log(segment);
// }
//
// const binarySearch = (array, element) => {
//   let left = 0;
//   let right = array.length - 1;
     // <= allows the func to work even if an array had a single element, or we narrow the array down to a single element
//   while (left <= right) {
//     printSegment(array, left, right);
//     const middle = left + Math.floor((right - left) / 2);
//     console.log('left is: ', left, ', right is: ', right, ' middle is: ', middle);
//     if (array[middle] === element) {
//       return middle;
//     } else if (array[middle] < element) {
//       left = middle + 1;
//     } else if (array[middle] > element) {
//       right = middle - 1;
//     }
//   }
//   return -1;
// }
//
// console.log(binarySearch(sortedArray, 6));
