

const swap = (array, left, right) => {
    const temp = array[left];
    array[left] = array[right];
    array[right] = temp;
}

const partition = (array, left, right) => {
    const partitionValue = typeof array[right] === "string" ? (`${array[right]}`).codePointAt(0) : array[right];
    let newPartitionindex = left;
    for(let i=left; i<right; i++) {
        const value = typeof array[i] === "string" ? (`${array[i]}`).codePointAt(0) : array[i];
        if (value < partitionValue) {
            swap(array, i, newPartitionindex);
            newPartitionindex = newPartitionindex+1;
        }
    }
    swap(array, newPartitionindex, right);
    return newPartitionindex;
}

const quickSort = (array, left=0, right=array.length-1) => {
    if (left < right) {
        const partitionIndex = partition(array, left, right);
        quickSort(array, partitionIndex+1, right);
        quickSort(array, left, partitionIndex-1);
    }
    return array;
}

console.log(quickSort([4,6,1,24,6,8,'f','q',4,2,5]));
console.log(quickSort(['z','a','g','k','A','T','Q','T','Q','U']));
console.log(quickSort(('za;sjbfgabhdgaasdASJFASLFBALSf').split('')));

// doing this is the key: typeof array[right] === "string" ? (`${array[right]}`).codePointAt(0) : array[right];
// using this can convert any sorting alg into string compatible - e.g. insertionSort

const getValue = (index, array) => {
    return typeof array[index] === "string" ? (`${array[index]}`).codePointAt(0) : array[index];
}

const insertionSort = (array) => {
    for(let i=0; i<array.length; i++) {
        let j = i;
        while(j > 0 && getValue(j-1, array) > getValue(j, array)) {
            swap(array, j, j-1);
            j--;
        }
    }
    return array;
}
